# Generated by Django 4.1.13 on 2024-07-29 23:03

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields
import roommatefinder.apps.api.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='creation date and time')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='modification date and time')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=200, unique=True)),
                ('name', models.CharField(max_length=200, null=True)),
                ('password', models.CharField(max_length=200)),
                ('age', models.PositiveIntegerField(default=0)),
                ('major', models.CharField(default='Undecided', max_length=25, null=True)),
                ('city', models.CharField(blank=True, max_length=25, null=True)),
                ('state', models.CharField(blank=True, max_length=25, null=True)),
                ('description', models.TextField(blank=True, max_length=500, null=True)),
                ('dorm_building', models.CharField(choices=[('1', 'Chapel Glen'), ('2', 'Gateway Heights'), ('3', 'Impact and Prosperity Epicenter'), ('4', 'Kahlert Village'), ('5', 'Lassonde Studios'), ('6', 'Officers Circle'), ('7', 'Sage Point'), ('8', 'Marriott Honors Community'), ('9', 'Guest House'), ('10', "I don't know ü§∑\u200d‚ôÇÔ∏è")], max_length=2, null=True)),
                ('interests', multiselectfield.db.fields.MultiSelectField(choices=[('1', 'Hanging out with friends'), ('2', 'Shopping'), ('3', 'Road Trips'), ('4', 'Rushing'), ('5', 'Reading'), ('6', 'Concerts'), ('7', 'Staying in'), ('8', 'Going out'), ('9', 'Being outside'), ('10', 'Thrifting'), ('11', 'Photography'), ('12', 'Snowboarding'), ('13', 'Skiing'), ('14', 'Working out'), ('15', 'Anything outdoors'), ('16', 'Hiking'), ('17', 'Surfing'), ('18', 'Music'), ('19', 'Dogs'), ('20', 'Cats'), ('21', 'Fishing'), ('22', 'Basketball'), ('23', 'Cliff Jumping'), ('24', 'Church'), ('25', 'Camping'), ('26', 'Soccer'), ('27', 'Lacrosse'), ('28', 'Dirt Biking'), ('29', 'Chill'), ('30', 'Travel'), ('31', 'Going on runs'), ('32', 'Track and Field'), ('33', 'Football'), ('34', 'Baseball'), ('35', 'Cheer'), ('36', 'Figure Skating'), ('37', 'Cross Country'), ('38', 'Napping'), ('39', 'Business Scholars'), ('40', 'Honors College'), ('41', 'ROTC'), ('42', 'Rocket League'), ('43', 'Fortnite'), ('44', 'COD'), ('45', 'Drinking'), ('46', 'Smoking'), ('47', 'LGBTQ+'), ('48', 'Mountain Biking'), ('49', 'Rock Climbing'), ('50', 'Nature')], max_length=1000)),
                ('graduation_year', models.PositiveIntegerField(blank=True, null=True)),
                ('otp', models.CharField(blank=True, max_length=6, null=True)),
                ('otp_expiry', models.DateTimeField(blank=True, null=True)),
                ('max_otp_try', models.CharField(default=3, max_length=2)),
                ('otp_max_out', models.DateTimeField(blank=True, null=True)),
                ('otp_verified', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('has_account', models.BooleanField(default=False)),
                ('pause_profile', models.BooleanField(default=False)),
                ('sex', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1)),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to=roommatefinder.apps.api.models.upload_thumbnail)),
                ('blocked_profiles', models.ManyToManyField(blank=True, related_name='blocked_by', to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Connection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='creation date and time')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='modification date and time')),
                ('accepted', models.BooleanField(default=False)),
                ('display_match', models.BooleanField(default=False)),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_connections', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_connections', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RoommateQuiz',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='creation date and time')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='modification date and time')),
                ('profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('social_battery', models.IntegerField(default=10, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)])),
                ('clean_room', models.CharField(blank=True, default='', max_length=100)),
                ('noise_level', models.IntegerField(default=10, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)])),
                ('guest_policy', models.CharField(blank=True, default='', max_length=100)),
                ('in_room', models.IntegerField(default=10, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)])),
                ('hot_cold', models.IntegerField(default=10, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)])),
                ('bed_time', models.CharField(blank=True, default='', max_length=100)),
                ('wake_up_time', models.CharField(blank=True, default='', max_length=100)),
                ('sharing_policy', models.CharField(blank=True, default='', max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='creation date and time')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='modification date and time')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('profile', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='creation date and time')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='modification date and time')),
                ('text', models.TextField()),
                ('connection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='api.connection')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='my_messages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
